version: "3.9"
services:
  ag-springboot:
    build:
      context: ./api
      dockerfile: Dockerfile
    image: alan10607/anonygram/api:latest
    container_name: ag-springboot
    ports:
     - "8080:8080"
    volumes:
     - "~/docker/volume/anonygram/log:/log"
    environment:
     - ACTIVE=prod
     - ES_HOST=ag-elasticsearch
    depends_on:
     - ag-elasticsearch
    networks:
     - proxy
    command: ["/wait-for-it.sh", "ag-elasticsearch:9200", "--", "java","-jar","anonygram.jar"]

  ag-elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    container_name: ag-elasticsearch
    user: "1000:1000"
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ELASTIC_PASSWORD=root
    volumes:
      - "~/docker/volume/elasticsearch/data:/usr/share/elasticsearch/data"
      - "~/docker/volume/elasticsearch/logs:/usr/share/elasticsearch/logs"
    networks:
     - proxy

  ag-react:
    build:
      context: ./web
      dockerfile: Dockerfile
    image: alan10607/anonygram/web:latest
    container_name: ag-react
    ports:
      - "3000:3000"
    environment:
      CHOKIDAR_USEPOLLING: "true"
    volumes:
      - "~/docker/volume/react/node_modules:/usr/app/node_modules"
    networks:
     - proxy

  ag-nginx:
    image: nginx:1.17
    container_name: ag-nginx
    ports:
      - "80:80"
    volumes:
      - "./nginx/default.conf:/etc/nginx/conf.d/default.conf" 
      - "~/docker/volume/nginx/log:/var/log/nginx"
    depends_on:
     - ag-springboot
     - ag-react
    networks:
     - proxy


networks:
  proxy:
    name: ag-network